{"swagger":"2.0","info":{"version":"v1.0","title":"Punchcard API","description":"\n## Important Testing Note!\n\n**__Please keep in mind that if this suddenly stops working, it might mean that the database was re-seeded.\nSometimes the developers will need to do this and it will make your test cases invalid and need to be updated to\nnew values.  Try not to rely too much on specific values in your test cases, and they likely will often change.__**\n\nDevelopers will try to avoid this, as it will impact you negatively with test cases. Using the User list\n(/dev/users/ below) will help a lot, as will not trying to be too specific with the actual data being tested.\n\n## Requests\n\nThere is a lot of flexibility in testing and testing data. If you need specific information or insight, please open\na github issue with the request, and the development team will do our best to fulfill it. We want you to be able to test\nas well and easily as possible, because it makes the product that much stronger!\n\n## Testing\n\nQA Spreadsheet:\n  - https://docs.google.com/spreadsheets/d/1jVOZ1LpNWcrCwzr6_eogQPhfEyJEG4HmLIiPptmJlrc/edit#gid=0\n\n\nPlease test thoroughly, with these details:\n  - While in testing, you can access the Swagger UI docs via: http://petstore.swagger.io/?url=https://companya.inversedevs.com/dev/swagger.json\n  - TEST HELPER: User data to get insight into testing can be seen here: https://companya.inversedevs.com/dev/users/\n  - Please use Google Chrome with the Postman App. We can support you easier with these details.\n    - https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop\n      - Basic Auth - email or phone + password (always abc123456 in testing)\n      - Accept and Content-type headers: application/json (see below)\n      - NOTE (Important!); by default, the subdomain is set to `companya` but some users will need this changed in order for you to test as them. See the `subdomain` column in the /dev/users/ page.\n  - **Please pay attention to whether the documenation is accurate** and compare what is returned in the messages and data structure to what the document says will be returned and make a note if it is not correct in any way.\n  - Please log all issues at Punchcard Central: https://github.com/inverseapplications/punchcard-central/issues\n  - Please pay attention to the response codes and messages. If you see one that is not listed - you get a 404, or 400, say, without the documentation listing that as an option. Please open an issue on github and include what user/Authorization header/data you sent, what endpoint it was, and what the message said (please copy and paste it exactly).\n\n## Results\nMost results will return a predictable envelope; Successful responses are usually like this:\n```json\n{\n    \"result\": \"success\",\n    \"message\": \"5 records found\",\n    \"http_code\": 200,\n    \"data\": {\n      ... data object if one, array if many (1) ...\n    }\n}\n```\n\nIf there is only ever a chance that there will be one result, `data` will be a single object, not wrapping in array.\n\nIf there is the potential for more than one result, then `data` will always be an array, even if empty or even if one result is returned.\n\n## Paths, Payload and Parameters\n\n### Paths\nThis API accepts `path` parameters for GET and DELETE requests.\n\n### Payload\nThis API accepts JSON in the body (\"payload\") for POST and PUT requests\n\n**NOTE**: Required Headers:\n\n    - Content-type: application/json\n    - Accept: application/json\n\n  Please send both headers with all requests.\n\n### Parameters\nThis API uses parameters for pagination, search terms and the ?echo=json functionality.\n\n## Errors\n\nWe support 400 (Bad Input Data), 401 (Not Authenticated - not logged in), 403 (Not Authorized - logged in, but no permissions to take that action), 404 (Not Found), 500 (Internal Server Error)\n\n## Documentation\n\nIf anything is unclear or you find confusing information in this documentation, please let us know so we can fix and/or make the information clearer.\n\n## Helper Videos\n\nI'm creating a series of videos both to documention how to test, and the tests themselves.\n\n  - https://youtu.be/n4rGs7fj0M8 - 001 Check In/Out\n  - https://www.youtube.com/watch?v=GQSBWnA-pro - 002 Important Headers (my slow computer cut off the beginning and end a bit, sorry!)\n\n## Password Recovery/Reset (GH#23)\n\nSimply link to /password/reset/ - this is not an API endpoint, since we need to do some validation and the email will return them to a browser, it's best it opens in a browser.\n\neg: http://companya.punchcardllc.com/password/reset/\n\n**__They need to be pointed to the proper subdomain, too. That is important.__**\n"},"schemes":["https"],"host":"companya.inversedevs.com","basePath":"/v1.0","consumes":["application/json"],"produces":["application/json"],"paths":{"/":{"get":{"summary":"Root Help","description":"Get root node for help and documentation instructions","responses":{"200":{"description":"OK","schema":{"description":"Successful call properties","properties":{"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"successfully retrieved 1 record"},"data":{"type":"string","example":"An object or an array, depending on results..."}}}}}}},"/user":{"get":{"tags":["mobile-app","user"],"summary":"View Own Profile","description":"## Testing\n\nThis endpoint shows the user their own profile. It only should work with the user's own ID, not with another user's id.\nThere is no `uniq_id` to pass to make it work. The user is authenticated, using the Authorization header, and it shows\nthem their profile information.\n\nPlease make sure all of the fields listed below exist in the result.\n","parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"}],"responses":{"200":{"description":"Results of a user viewing own profile","schema":{"type":"object","properties":{"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"successfully retrieved 1 record"},"data":{"type":"object","required":["uuid","name","email","mobileNumber","username"],"properties":{"name":{"type":"string","example":"Jane Doe","description":"User's full name"},"email":{"type":"string","example":"email@domain.com","description":"User's email; can also be a username"},"mobileNumber":{"type":"string","example":1234569999,"description":"User's mobile phone number; can also be a username"},"username":{"type":"string","example":"JaneDoe1988","description":"User's username"},"permissions":{"type":"array","items":{"type":"string","example":"{json}"}},"uniq_id":{"readOnly":true,"type":"string","example":"8b2fc998-ce46-38e7-b7de-04a29e8695af","description":"The assigned UUID for the user"},"role":{"readOnly":true,"type":"string","example":"admin (read only)","description":"The user's role; user, superuser, admin, superadmin"},"status":{"readOnly":true,"type":"string","example":"active (read only)","description":"The user's status - active or inactive"},"jdoc":{"type":"object","description":"the json document store","properties":{"department":{"type":"string","example":"Department Name"},"trade":{"type":"string","example":"Craftsman"},"job_title":{"type":"string","example":"Head Craftsman"},"homeNumber":{"type":"integer","example":3334445555,"description":"The user's home phone number"},"workNumber":{"type":"integer","example":3334446666,"description":"The user's work phone number"},"middleName":{"type":"string","example":"Franklin","description":"The user's middle name"},"address":{"type":"object","description":"User address","properties":{"address1":{"type":"string","example":"123 Avenue Way","description":"Line 1 of the user's address"},"address2":{"type":"string","example":"Suite 3","description":"Line 2 of the user's address"},"zip":{"type":"integer","example":75023,"description":"The user's main zip code"},"city":{"type":"string","example":"New Haven","description":"The user's city"},"state":{"type":"string","example":"MT","description":"State (2 letter)"}}},"vehicle":{"type":"object","description":"User Vehicle","properties":{"make":{"type":"string","example":"Ford","description":"The make of the user's car"},"model":{"type":"string","example":"F150","description":"The model of the user's car"},"licPlateNumber":{"type":"string","example":"333-8AGR","description":"The user's license plate number"},"licPlateState":{"type":"string","example":"ABG-312","description":"The user's license plate number"},"driversLicenseState":{"type":"string","example":"TX","description":"The user's drivers license state"},"driversLicenseNumber":{"type":"string","example":"XPRDTY88","description":"The user's drivers license number"}}},"emerContact":{"type":"object","description":"User's emergency contact","properties":{"firstName":{"type":"string","example":"JK","description":"The emergency contact's first name"},"lastName":{"type":"string","example":"Jones","description":"The emergency contact's last name"},"middleName":{"type":"string","example":"Pat","description":"The emergency contact's middle name"},"relation":{"type":"string","example":"Spouse","description":"The emergency contact's relationship to the user"},"email":{"type":"string","example":"example@email.com","description":"The emergency contact's email address"},"homeNumber":{"type":"string","example":9998887777,"description":"The emergency contact's home phone number"},"workNumber":{"type":"string","example":8887773333,"description":"The emergency contact's work phone number"},"mobileNumber":{"type":"string","example":3332223333,"description":"The emergency contact's mobile phone number"}}}}}}}}}},"401":{"description":"Not Authenticated","schema":{"description":"Not Authenticated Response's properties","properties":{"http_code":{"type":"integer","example":401},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authenticated"},"data":{"type":"array"}}}},"403":{"description":"Not Authorized","schema":{"description":"Not Authorized Response's properties","properties":{"http_code":{"type":"integer","example":403},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authorized"},"data":{"type":"array"}}}}}},"put":{"tags":["mobile-app","user"],"summary":"Update Own Profile","description":"## Testing\n\nThis endpoint allows the user to update their own profile. While we send the updated profile information in their body,\nwe do not send an `id` or `uniq_id`. The Authorization header will allow us to find the `id` of the user updating their\nown profile. It will return a successful message, and also the updated information, in json.\n\nPlease test by changing the field names, removing field names, adding new field names that shouldn't exist, and try the\n`PUT` operation to update the information.\n","parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"},{"name":"payload","in":"body","required":true,"schema":{"type":"object","required":["uuid","name","email","mobileNumber","username"],"properties":{"name":{"type":"string","example":"Jane Doe","description":"User's full name"},"email":{"type":"string","example":"email@domain.com","description":"User's email; can also be a username"},"mobileNumber":{"type":"string","example":1234569999,"description":"User's mobile phone number; can also be a username"},"username":{"type":"string","example":"JaneDoe1988","description":"User's username"},"permissions":{"type":"array","items":{"type":"string","example":"{json}"}},"uniq_id":{"readOnly":true,"type":"string","example":"8b2fc998-ce46-38e7-b7de-04a29e8695af","description":"The assigned UUID for the user"},"role":{"readOnly":true,"type":"string","example":"admin (read only)","description":"The user's role; user, superuser, admin, superadmin"},"status":{"readOnly":true,"type":"string","example":"active (read only)","description":"The user's status - active or inactive"},"jdoc":{"type":"object","description":"the json document store","properties":{"department":{"type":"string","example":"Department Name"},"trade":{"type":"string","example":"Craftsman"},"job_title":{"type":"string","example":"Head Craftsman"},"homeNumber":{"type":"integer","example":3334445555,"description":"The user's home phone number"},"workNumber":{"type":"integer","example":3334446666,"description":"The user's work phone number"},"middleName":{"type":"string","example":"Franklin","description":"The user's middle name"},"address":{"type":"object","description":"User address","properties":{"address1":{"type":"string","example":"123 Avenue Way","description":"Line 1 of the user's address"},"address2":{"type":"string","example":"Suite 3","description":"Line 2 of the user's address"},"zip":{"type":"integer","example":75023,"description":"The user's main zip code"},"city":{"type":"string","example":"New Haven","description":"The user's city"},"state":{"type":"string","example":"MT","description":"State (2 letter)"}}},"vehicle":{"type":"object","description":"User Vehicle","properties":{"make":{"type":"string","example":"Ford","description":"The make of the user's car"},"model":{"type":"string","example":"F150","description":"The model of the user's car"},"licPlateNumber":{"type":"string","example":"333-8AGR","description":"The user's license plate number"},"licPlateState":{"type":"string","example":"ABG-312","description":"The user's license plate number"},"driversLicenseState":{"type":"string","example":"TX","description":"The user's drivers license state"},"driversLicenseNumber":{"type":"string","example":"XPRDTY88","description":"The user's drivers license number"}}},"emerContact":{"type":"object","description":"User's emergency contact","properties":{"firstName":{"type":"string","example":"JK","description":"The emergency contact's first name"},"lastName":{"type":"string","example":"Jones","description":"The emergency contact's last name"},"middleName":{"type":"string","example":"Pat","description":"The emergency contact's middle name"},"relation":{"type":"string","example":"Spouse","description":"The emergency contact's relationship to the user"},"email":{"type":"string","example":"example@email.com","description":"The emergency contact's email address"},"homeNumber":{"type":"string","example":9998887777,"description":"The emergency contact's home phone number"},"workNumber":{"type":"string","example":8887773333,"description":"The emergency contact's work phone number"},"mobileNumber":{"type":"string","example":3332223333,"description":"The emergency contact's mobile phone number"}}}}}}}}],"responses":{"200":{"description":"Results of a user viewing own profile","schema":{"type":"object","properties":{"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"successfully updated 1 record"},"data":{"type":"object","required":["uuid","name","email","mobileNumber","username"],"properties":{"name":{"type":"string","example":"Jane Doe","description":"User's full name"},"email":{"type":"string","example":"email@domain.com","description":"User's email; can also be a username"},"mobileNumber":{"type":"string","example":1234569999,"description":"User's mobile phone number; can also be a username"},"username":{"type":"string","example":"JaneDoe1988","description":"User's username"},"permissions":{"type":"array","items":{"type":"string","example":"{json}"}},"uniq_id":{"readOnly":true,"type":"string","example":"8b2fc998-ce46-38e7-b7de-04a29e8695af","description":"The assigned UUID for the user"},"role":{"readOnly":true,"type":"string","example":"admin (read only)","description":"The user's role; user, superuser, admin, superadmin"},"status":{"readOnly":true,"type":"string","example":"active (read only)","description":"The user's status - active or inactive"},"jdoc":{"type":"object","description":"the json document store","properties":{"department":{"type":"string","example":"Department Name"},"trade":{"type":"string","example":"Craftsman"},"job_title":{"type":"string","example":"Head Craftsman"},"homeNumber":{"type":"integer","example":3334445555,"description":"The user's home phone number"},"workNumber":{"type":"integer","example":3334446666,"description":"The user's work phone number"},"middleName":{"type":"string","example":"Franklin","description":"The user's middle name"},"address":{"type":"object","description":"User address","properties":{"address1":{"type":"string","example":"123 Avenue Way","description":"Line 1 of the user's address"},"address2":{"type":"string","example":"Suite 3","description":"Line 2 of the user's address"},"zip":{"type":"integer","example":75023,"description":"The user's main zip code"},"city":{"type":"string","example":"New Haven","description":"The user's city"},"state":{"type":"string","example":"MT","description":"State (2 letter)"}}},"vehicle":{"type":"object","description":"User Vehicle","properties":{"make":{"type":"string","example":"Ford","description":"The make of the user's car"},"model":{"type":"string","example":"F150","description":"The model of the user's car"},"licPlateNumber":{"type":"string","example":"333-8AGR","description":"The user's license plate number"},"licPlateState":{"type":"string","example":"ABG-312","description":"The user's license plate number"},"driversLicenseState":{"type":"string","example":"TX","description":"The user's drivers license state"},"driversLicenseNumber":{"type":"string","example":"XPRDTY88","description":"The user's drivers license number"}}},"emerContact":{"type":"object","description":"User's emergency contact","properties":{"firstName":{"type":"string","example":"JK","description":"The emergency contact's first name"},"lastName":{"type":"string","example":"Jones","description":"The emergency contact's last name"},"middleName":{"type":"string","example":"Pat","description":"The emergency contact's middle name"},"relation":{"type":"string","example":"Spouse","description":"The emergency contact's relationship to the user"},"email":{"type":"string","example":"example@email.com","description":"The emergency contact's email address"},"homeNumber":{"type":"string","example":9998887777,"description":"The emergency contact's home phone number"},"workNumber":{"type":"string","example":8887773333,"description":"The emergency contact's work phone number"},"mobileNumber":{"type":"string","example":3332223333,"description":"The emergency contact's mobile phone number"}}}}}}}}}},"401":{"description":"Not Authenticated","schema":{"description":"Not Authenticated Response's properties","properties":{"http_code":{"type":"integer","example":401},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authenticated"},"data":{"type":"array"}}}},"403":{"description":"Not Authorized","schema":{"description":"Not Authorized Response's properties","properties":{"http_code":{"type":"integer","example":403},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authorized"},"data":{"type":"array"}}}},"500":{"description":"Internal Server Error","schema":{"description":"Error call properties","properties":{"http_code":{"type":"integer","example":500},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"error"},"data":{"type":"array"}}}}}}},"/user/avatar":{"get":{"tags":["mobile-app","user","images"],"summary":"View Own Avatar","description":"## Testing\n\nPlease test this endpoint with several users. Also, try updating (see `PUT` below) with a new avatar you find from a google\nimage search, and then see if it is updated when you come back here. This will not return a JSON array, but it will return\nthe image itself. You should see an image in this endpoint.\n","produces":["image/png"],"parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"}],"responses":{"200":{"description":"Results of a user viewing own profile","schema":{"type":"file"}},"401":{"description":"Not Authenticated","schema":{"description":"Not Authenticated Response's properties","properties":{"http_code":{"type":"integer","example":401},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authenticated"},"data":{"type":"array"}}}},"403":{"description":"Not Authorized","schema":{"description":"Not Authorized Response's properties","properties":{"http_code":{"type":"integer","example":403},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authorized"},"data":{"type":"array"}}}}}},"put":{"tags":["mobile-app","user"],"summary":"Update Own Avatar","description":"\n## Testing\n\nThis actually requires a base64-encoded image. If you are familiar with command line Mac or Linux, you can use the\ncommand line program 'base64' to encode an image:\n\n  1. Download an image\n  1. find it on the command line (eg cd ~/Downloads)\n  1. base64 filename.png\n  1. copy the gibberish that is output between the quotes in \"image\" \"\"\n  1. Try a `PUT` to see if it works. The server should read the encoded string, decode it and save the file for\n     the authenticated user.\n\nPlease do this with a variety of images - small, big, huge, jpg, png, etc. You can use other image types, like gif and tiff,\nto ensure they do not work. We only support .jpg and .png images. I would like a test story for each image type, and grouped\nby 5-10 sizes, like 'less than 50k', '50k - 100k', etc.\n","parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"},{"name":"payload","in":"body","required":true,"schema":{"description":"PUT for /ver/user/avatar/","properties":{"image":{"type":"string","example":"<base64encoded_image>"}}}}],"responses":{"200":{"description":"OK","schema":{"description":"Successful call properties","properties":{"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"successfully retrieved 1 record"},"data":{"type":"string","example":"An object or an array, depending on results..."}}}},"401":{"description":"Not Authenticated","schema":{"description":"Not Authenticated Response's properties","properties":{"http_code":{"type":"integer","example":401},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authenticated"},"data":{"type":"array"}}}},"403":{"description":"Not Authorized","schema":{"description":"Not Authorized Response's properties","properties":{"http_code":{"type":"integer","example":403},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authorized"},"data":{"type":"array"}}}}}}},"/user/avatar/{uniq_id}":{"get":{"tags":["mobile-app","user","images"],"summary":"Any logged in user can view avatar by uniq_id","description":"## Testing\n\nPlease test this endpoint with several users, using different `uniq_id`.  Please find 5-7 different `uniq_id`\nfrom users and try them, using a variety of user roles and status. For example, a test story might cover:\n\n  1. User who has 'status' = 'active' and 'role' = 'user' views avatar from user who is 'status' = 'active' and 'role' = 'user'\n  1. User who has 'status' = 'active' and 'role' = 'superuser' views avatar from user who is 'status' = 'active' and 'role' = 'user'\n  1. ... etc\n","produces":["image/png"],"parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"},{"name":"uniq_id","in":"path","description":"The uniq_id (UUID) of the user","required":true,"type":"string"}],"responses":{"200":{"description":"Results of a user viewing own profile","schema":{"type":"file"}},"404":{"description":"Not Found","schema":{"description":"Not Found Response's properties","properties":{"http_code":{"type":"integer","example":404},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Found"},"data":{"type":"array"}}}}}}},"/user/logs":{"get":{"tags":["mobile-app","user"],"summary":"Get all of the authenticated user's logs","description":"## Testing\n\nPlease test that the fields are documented properly, that they show the fields that are actually returned. If you test the\nability for the user to write a new log, or check in with an exception, come back to this endpoint to verify that\nthe newly generated log message shows up.\n\nNote: Please test to see if you get a 404 response for a user that does not have any log entries. It should still be 200,\n    but show \"num_results\": 0 in that case.  Please open an issue if you ever get a 404 response.\n","parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"},{"name":"page","in":"query","required":false,"type":"integer"}],"responses":{"200":{"description":"Successful retrieval of user's logs; note: data is always an array, whether 1 or greater than 1 result","schema":{"type":"object","properties":{"total":{"type":"integer","example":38},"per_page":{"type":"integer","example":10},"current_page":{"type":"integer","example":2},"last_page":{"type":"integer","example":4},"next_page_url":{"type":"string","example":"http://companya.punchcardllc.com/api/v1.0/user/logs?page=3"},"prev_page_url":{"type":"string","example":"http://companya.punchcardllc.com/api/v1.0/user/logs?page=2"},"from":{"type":"integer","example":1},"to":{"type":"integer","example":10},"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"Successful"},"num_results":{"type":"integer","example":5},"data":{"type":"array","items":{"properties":{"note":{"type":"string","example":"This is a log note"},"uniq_id":{"type":"string","example":"846ebe7a-594b-4085-9f29-7730c0f878c6"},"type":{"type":"string","example":"punch-in exception"},"dateTime":{"type":"string","format":"date","example":"2016-10-24 21:50:15"},"project":{"type":"object","properties":{"uniq_id":{"type":"string","format":"uuid","example":"24de4935-f1ba-38b3-b44e-96fcd8e9ccab"},"name":{"type":"string","example":"Jacobs Inc"},"id":{"type":"integer","example":2}}}}}}}}},"401":{"description":"Not Authenticated","schema":{"description":"Not Authenticated Response's properties","properties":{"http_code":{"type":"integer","example":401},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authenticated"},"data":{"type":"array"}}}},"403":{"description":"Not Authorized","schema":{"description":"Not Authorized Response's properties","properties":{"http_code":{"type":"integer","example":403},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authorized"},"data":{"type":"array"}}}},"422":{"description":"Bad Input","schema":{"description":"Bad Input Response's properties. When safe to do so, `message` will include details of the bad input.","properties":{"http_code":{"type":"integer","example":422},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Bad Input details"}}}}}},"post":{"tags":["mobile-app","user"],"summary":"Write a new note","description":"## Testing\n\nThis endpoint allows a user to write a new free-form note to be saved. This only will work for an authenticated user,\nsaving the note under the authenticated user's ID.\n","parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"},{"name":"payload","in":"body","required":true,"schema":{"description":"POST to write note","properties":{"note":{"type":"string","example":"Text of the note"},"uniq_id":{"type":"string","format":"uuid","example":"4dfe39bb-e545-4196-909f-5a4e14d731a8"}}}}],"responses":{"200":{"description":"Successful note writing","schema":{"type":"object","properties":{"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"Successful"}}}},"401":{"description":"Not Authenticated","schema":{"description":"Not Authenticated Response's properties","properties":{"http_code":{"type":"integer","example":401},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authenticated"},"data":{"type":"array"}}}},"403":{"description":"Not Authorized","schema":{"description":"Not Authorized Response's properties","properties":{"http_code":{"type":"integer","example":403},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authorized"},"data":{"type":"array"}}}},"422":{"description":"Bad Input","schema":{"description":"Bad Input Response's properties. When safe to do so, `message` will include details of the bad input.","properties":{"http_code":{"type":"integer","example":422},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Bad Input details"}}}}}}},"/user/checkins":{"get":{"tags":["mobile-app","user","checks"],"summary":"User views own checkins","description":"## Testing\n\nThis endpoint shows an authenticated user their checkin history. They can see the list, spanning projects.\n","parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"}],"responses":{"200":{"description":"Results of a user viewing own profile","schema":{"type":"object","properties":{"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"20 checkins found"},"data":{"type":"array","items":{"properties":{"name":{"type":"string","example":"Project: Flowers By Irene"},"checkInDateTime":{"type":"string","format":"date-time","example":"2016-10-03 21:54:13"},"checkOutDateTime":{"type":"string","format":"date-time","example":"2016-10-03 21:54:57"},"project":{"type":"object","properties":{"uniq_id":{"type":"string","format":"uuid","example":"24de4935-f1ba-38b3-b44e-96fcd8e9ccab"},"name":{"type":"string","example":"Project: Jacobs Inc"}}}}}}}}},"401":{"description":"Not Authenticated","schema":{"description":"Not Authenticated Response's properties","properties":{"http_code":{"type":"integer","example":401},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authenticated"},"data":{"type":"array"}}}},"403":{"description":"Not Authorized","schema":{"description":"Not Authorized Response's properties","properties":{"http_code":{"type":"integer","example":403},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authorized"},"data":{"type":"array"}}}}}}},"/user/check":{"get":{"tags":["mobile-app","user","checks"],"summary":"Test if authenticated user is checked in","description":"\n## Testing\n\nThis endpoint allows the client-applications (aka Consumer) to verify if the user is already checked-in to a\nproject. Since the user can only get checked into one thing at a time, no further data is required beyond that\nthe user is authenticated.\n\n## Helper Video\n\n- https://youtu.be/n4rGs7fj0M8 - 001 Check In/Out\n","parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"}],"responses":{"200":{"description":"\n**Checked in/out**\n- 200 is valid for if they are checked in or if they are not.\n- Will provide a project uniq_id if they are checked in\n- `uniq_id` will be null if not checked in\n","schema":{"type":"object","properties":{"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"Already checked in"},"data":{"type":"object","properties":{"id":{"type":"integer","example":"3807"},"uniq_id":{"type":"string","example":"846ebe7a-594b-4085-9f29-7730c0f878c6"},"checkInDateTime":{"type":"string","example":"2016-10-20 14:22:48"},"project_id":{"type":"integer","example":"12"},"project":{"type":"object","properties":{"id":{"type":"integer","example":"3807"},"uniq_id":{"type":"string","example":"846ebe7a-594b-4085-9f29-7730c0f878c6"},"name":{"type":"string","example":"Project: Sanford PLC"}}}}}}}},"401":{"description":"Not Authenticated","schema":{"description":"Not Authenticated Response's properties","properties":{"http_code":{"type":"integer","example":401},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authenticated"},"data":{"type":"array"}}}},"403":{"description":"Not Authorized","schema":{"description":"Not Authorized Response's properties","properties":{"http_code":{"type":"integer","example":403},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authorized"},"data":{"type":"array"}}}}}},"post":{"tags":["mobile-app","user","checks"],"summary":"Check in to a project","description":"\n## Testing\n\nThis endpoint created a check-in. The user can only be checked into one thing at a time, so it checks\nif they are already checked in to something, and if so, returns an error message stating so. If not, it shows\nthat they are now checked into the project represented by `{uniq_id}`\n\nIf they are already checked in, a message will display saying they are checked in, instead.\n`exceptionReason` is required as a field, but a value is not required.\nIt should be null if there is no reason. If there is anything besides `null`, it is logged!\n\nNote on 10/23/16 - I changed the validation on `exceptionReason` and it wasn't nullable for a short time. It is fixed now. - Hans\n\n**10/25/16 - Added requirements for all but user_id. The user_id field can be:**\n\n  - null, if checkMethod is 'geo'\n  - uuid, if checkMethod is 'qr' (scanning QR badge barcode)\n\n**10/27/2016 - removed ` - integer, if checkMethod is 'manual' (aka: badge ID checkin)` - badge/manual checkin point moved to /check/badge and the badge_id is project_user.id**\n\n**10/31/2016 - MOVED \"manual\" (badge) and \"qr\" to /check/badge and /check/qr respectively. Also: checkMethod is no longer required; user_id is no longer required.**\n","parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"},{"name":"payload","in":"body","required":true,"schema":{"required":["uniq_id","latitude","longitude","exceptionReason"],"description":"POST to check in","properties":{"uniq_id":{"type":"string","example":"09cf7c43-c6cc-40b8-8694-365eb4c58296"},"latitude":{"type":"string","example":"40.0234"},"longitude":{"type":"string","example":"-80.3343"},"exceptionReason":{"type":"string","example":"My GPS is down | null"}}}}],"responses":{"200":{"description":"**Check IN**\n","schema":{"type":"object","properties":{"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"checked-in"},"data":{"type":"object","properties":{"check_uniq_id":{"type":"string","example":"846ebe7a-594b-4085-9f29-7730c0f878c6"}}}}}},"401":{"description":"Not Authenticated","schema":{"description":"Not Authenticated Response's properties","properties":{"http_code":{"type":"integer","example":401},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authenticated"},"data":{"type":"array"}}}},"403":{"description":"Not Authorized","schema":{"description":"Not Authorized Response's properties","properties":{"http_code":{"type":"integer","example":403},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authorized"},"data":{"type":"array"}}}},"422":{"description":"**ALREADY Checked IN**\n","schema":{"type":"object","properties":{"http_code":{"type":"integer","example":422},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Checkin failed; already checked in"}}}}}},"put":{"tags":["mobile-app","user","checks"],"summary":"Check out from a project","description":"\n## Testing\n\nThis endpoint will check a user out. Because a user will need to be checked in, in order to check out, this will\ncheck if they are already checked-in.  If they are not yet checked in, it will respond with an error saying so.\n\nIf they are not checked in, a message will display saying they are not checked in, instead.\n`exceptionReason` is required as a field, but a value is not required.\nIt should be null if there is no reason. If there is anything besides `null`, it is logged!\n\nNote on 10/23/16 - I changed the validation on `exceptionReason` and it wasn't nullable for a short time. It is fixed now. - Hans\n\n**10/25/16 - Added requirements for all but user_id. The user_id field can be:**\n\n  - null, if checkMethod is 'geo'\n  - integer, if checkMethod is 'manual' (aka: badge ID checkin)\n  - uuid, if checkMethod is 'qr' (scanning QR badge barcode)\n\n**10/27/2016 - removed ` - integer, if checkMethod is 'manual' (aka: badge ID checkin)` - badge/manual checkin point moved to /check/badge and the badge_id is project_user.id**\n\n**10/31/2016 - MOVED \"manual\" (badge) and \"qr\" to /check/badge and /check/qr respectively. Also: checkMethod is no longer required; user_id is no longer required.**\n","parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"},{"name":"payload","in":"body","required":true,"schema":{"description":"PUT to check OUT","properties":{"uniq_id":{"type":"string","example":"09cf7c43-c6cc-40b8-8694-365eb4c58296"},"latitude":{"type":"string","example":"40.0234"},"longitude":{"type":"string","example":"-80.3343"},"exceptionReason":{"type":"string","example":"I forgot to check out | null"}}}}],"responses":{"200":{"description":"**Check OUT**\n\nTo check out you must already be checked in.\n","schema":{"type":"object","properties":{"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"checked-out"}}}},"401":{"description":"Not Authenticated","schema":{"description":"Not Authenticated Response's properties","properties":{"http_code":{"type":"integer","example":401},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authenticated"},"data":{"type":"array"}}}},"403":{"description":"Not Authorized","schema":{"description":"Not Authorized Response's properties","properties":{"http_code":{"type":"integer","example":403},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authorized"},"data":{"type":"array"}}}},"422":{"description":"**NOT Checked IN**\n","schema":{"type":"object","properties":{"http_code":{"type":"integer","example":422},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Checkout failed; not checked in"}}}}}}},"/user/password":{"put":{"tags":["mobile-app","user"],"summary":"Change password","description":"\n## Testing\n","parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"},{"name":"payload","in":"body","required":true,"schema":{"description":"PUT for changing password","properties":{"current_password":{"type":"string","example":"oldPassword123!"},"new_password":{"type":"string","example":"abc123456"},"new_password_confirmation":{"type":"string","example":"abc123456"}}}}],"responses":{"200":{"description":"Successful password update","schema":{"type":"object","properties":{"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"Password changed"}}}},"401":{"description":"Not Authenticated","schema":{"description":"Not Authenticated Response's properties","properties":{"http_code":{"type":"integer","example":401},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authenticated"},"data":{"type":"array"}}}},"403":{"description":"Not Authorized","schema":{"description":"Not Authorized Response's properties","properties":{"http_code":{"type":"integer","example":403},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authorized"},"data":{"type":"array"}}}}}}},"/check/badge":{"post":{"tags":["mobile-app","user","checks"],"summary":"Check in to a project via a Badge","description":"\n## Testing\n\nThis endpoint creates a check-in via a manually typed-in number.\n\nScenario:\n  Company has a person standing at the gate, checking people in.\n\n  Person walks up with a printed and laminated badge, person at the gate sees the \"badge_id\" number, types it in his phone. Done. Same in reverse for PUT/check out.\n\nThings to test:\n  Person who is standing at the gate, it is this person who is actually logged in and using the app.\n   - must be logged in\n   - must be active\n   - must have permissions via 'users->permissions->scanner' in the profile information. If the 'scanner' permission exists AND has the project_id (not uniq_id!), then this user is permitted to scan others in to the project.\n     **Please check the TEST HELPERS link above to determine who has this permission; You can Toggle Scanner Access there.**\n\nPerson who is walking through the gate, and being checked in:\n - must be on the project\n - must be active\n - must not already be checked in\n\nPossible BDD Test cases (please come up with more):\n  - \"As a superuser using the API directly, I need to check people in by entering their badge number\"\n  - \"As a superuser using the API directly, I need to check people in by entering their badge number, and find that people with what appears to be a valid badge **but are no longer on the project** cannot check in\"\n  - \"As a user using the API directly, and without 'scanner access', I should see an error message if I try to check someone in using their badge number\"\n  - \"As a superuser using the API directly, and without 'scanner access', I should see an error message if I try to check someone in using their badge number\"\n\nHow to test:\n Take the test case \"As a superuser, I need to check people in but make sure that people with what appears to be a valid bad but are no longer on the project cannot check in\"\n\n Go to the /dev/users page.\n Select a company.\n Find a superuser in that company with \"scanner access: yes\". This is GateUser\n   This will be your \"logged in user\" - the guy at the gate with a smart phone, \"scanner access\" and a line of people to check in or out.\n Use this GateUser user/pass in the Basic Auth\n Pick another user, this will be RegularUser\n Note which projects they are on\n On the client's page, find a project this RegularUser is **not** on (per the test)\n Try \"checking in/out\" as this user, using the /check/badge endpoint and note the message. (In this example, that would be an error notice that the RegularUser is not on the project).\n Test this with other people in the company, too.\n\n\n\n    The 'uniq_id' is passed along. This is the uniq_id of the project the guy at the gate checking people is logged in to.\n\n    We use this to confirm that this project AND the project on the badge are the same, so someone doesn't walk up with a badge for another project, but still get checked in.\n","parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"},{"name":"payload","in":"body","required":true,"schema":{"required":["uniq_id","latitude","longitude","badge_id"],"description":"POST to check in","properties":{"uniq_id":{"type":"string","example":"09cf7c43-c6cc-40b8-8694-365eb4c58296"},"latitude":{"type":"string","example":"40.0234"},"longitude":{"type":"string","example":"-80.3343"},"badge_id":{"type":"integer","example":555},"exceptionReason":{"type":"string","example":"(optional) My GPS is down | null"}}}}],"responses":{"200":{"description":"**Check IN**\n","schema":{"type":"object","properties":{"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"checked-in"},"data":{"type":"object","properties":{"check_uniq_id":{"type":"string","example":"846ebe7a-594b-4085-9f29-7730c0f878c6"},"badge":{"description":"Information to build a badge","type":"object","properties":{"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"successfully retrieved badge"},"data":{"type":"object","properties":{"name":{"type":"string","example":"James Smith-Jones"},"badge_id":{"type":"number","example":"55"},"client_name":{"type":"string","example":"ABC Company"},"project_name":{"type":"string","example":"Project ABC Building"},"qr_location":{"type":"string","format":"url","example":"http://domain.com/api/ver/badge/{user_uniq_id}/{project_uniq_id}"},"avatar_location":{"type":"string","format":"url","example":"http://domain.com/api/ver/user/avatar/{uniq_id}"}}}}}}}}}},"401":{"description":"Not Authenticated","schema":{"description":"Not Authenticated Response's properties","properties":{"http_code":{"type":"integer","example":401},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authenticated"},"data":{"type":"array"}}}},"403":{"description":"Not Authorized","schema":{"description":"Not Authorized Response's properties","properties":{"http_code":{"type":"integer","example":403},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authorized"},"data":{"type":"array"}}}},"422":{"description":"**ALREADY Checked IN**\n","schema":{"type":"object","properties":{"http_code":{"type":"integer","example":422},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Checkin failed; already checked in"}}}}}},"put":{"tags":["mobile-app","user","checks"],"summary":"Check out from a project","description":"\n## Testing\n\nSee details under \"POST\" for /check/badge\n","parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"},{"name":"payload","in":"body","required":true,"schema":{"description":"PUT to check OUT","required":["uniq_id","latitude","longitude","badge_id"],"properties":{"uniq_id":{"type":"string","description":"The UUID/uniq_id of the Project","example":"09cf7c43-c6cc-40b8-8694-365eb4c58296"},"latitude":{"type":"string","example":"40.0234"},"longitude":{"type":"string","example":"-80.3343"},"badge_id":{"type":"integer","example":"987"},"exceptionReason":{"type":"string","example":"(optional) I forgot to check out | null"}}}}],"responses":{"200":{"description":"**Check OUT**\n\nTo check out you must already be checked in.\n","schema":{"type":"object","properties":{"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"checked-out"},"data":{"type":"object","properties":{"check_uniq_id":{"type":"string","example":"846ebe7a-594b-4085-9f29-7730c0f878c6"},"badge":{"description":"Information to build a badge","type":"object","properties":{"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"successfully retrieved badge"},"data":{"type":"object","properties":{"name":{"type":"string","example":"James Smith-Jones"},"badge_id":{"type":"number","example":"55"},"client_name":{"type":"string","example":"ABC Company"},"project_name":{"type":"string","example":"Project ABC Building"},"qr_location":{"type":"string","format":"url","example":"http://domain.com/api/ver/badge/{user_uniq_id}/{project_uniq_id}"},"avatar_location":{"type":"string","format":"url","example":"http://domain.com/api/ver/user/avatar/{uniq_id}"}}}}}}}}}},"401":{"description":"Not Authenticated","schema":{"description":"Not Authenticated Response's properties","properties":{"http_code":{"type":"integer","example":401},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authenticated"},"data":{"type":"array"}}}},"403":{"description":"Not Authorized","schema":{"description":"Not Authorized Response's properties","properties":{"http_code":{"type":"integer","example":403},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authorized"},"data":{"type":"array"}}}},"422":{"description":"**NOT Checked IN**\n","schema":{"type":"object","properties":{"http_code":{"type":"integer","example":422},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Checkout failed; not checked in"}}}}}}},"/check/qr":{"post":{"tags":["mobile-app","user","checks"],"summary":"Check in to a project via a QR code","description":"\n## Testing\n\nThis endpoint creates a check-in via a manually typed-in number.\n\nScenario:\n  Company has a person standing at the gate, checking people in.\n\n  Person walks up with a printed and laminated badge, person at the gate sees the QR Code, scans it with his phone. Done. Same in reverse for PUT/check out (see below).\n\nThings to test:\n  Person who is standing at the gate, it is this person who is actually logged in and using the app.\n   - must be logged in\n   - must be active\n   - must have permissions via 'users->permissions->scanner' in the profile information. If the 'scanner' permission exists AND has the project_id (not uniq_id!), then this user is permitted to scan others in to the project.\n     **Please check the TEST HELPERS link above to determine who has this permission; You can Toggle Scanner Access there.**\n\nPerson who is walking through the gate, and being checked in:\n - must be on the project\n - must be active\n - must not already be checked in\n\nPossible BDD Test cases (please come up with more):\n  - \"As a superuser using the API directly, I need to check people in by scanning their badge QR code\"\n  - \"As a superuser using the API directly, I need to check people in by scanning their badge QR code, and find that people with what appears to be a valid badge **but are no longer on the project** cannot check in\"\n  - \"As a user using the API directly, and without 'scanner access', I should see an error message if I try to check someone by scanning their QR code\"\n  - \"As a **superuser** using the API directly, and without 'scanner access', I should see an error message if I try to check someone by scanning their QR code\"\n\nHow to test:\n Take the test case \"As a superuser, I need to check people in but make sure that people with what appears to be a valid bad but are no longer on the project cannot check in\"\n\nGo to the /dev/users page.\nSelect a company.\nFind a superuser in that company with \"scanner access: yes\". This is GateUser\n    This will be your \"logged in user\" - the guy at the gate with a smart phone, \"scanner access\" and a line of people to check in or out.\nUse this GateUser user/pass in the Basic Auth\nPick another user, this will be RegularUser\nNote which projects they are on\nOn the client's page, find a project this RegularUser is **not** on (per the test)\nTry \"checking in/out\" as this user, using the /check/qr endpoint and note the message. (In this example, that would be an error notice that the RegularUser is not on the project).\nTest this with other people in the company, too.\n\nThe 'uniq_id' is passed along. This is the uniq_id of the project the guy at the gate checking people is logged in to.\n\nWe use this to confirm that this project AND the project on the badge are the same, so someone doesn't walk up with a badge for another project, but still get checked in.\n\nWe have a new requirement that will really affect your work for the /check/badge and /check/qr endpoints.\n\nTo test it, you need to pick out someone as a scanner, make sure they have Scanner Access. Pick out a project, then check this person into that project. The new requirement is the person scanning (aka Scanner), is checked into the project he is scanning others into.\n\nPlease check all the end points, including /user/check, to make sure they work. Please also test the /check/badge and /check/qr end points for successful, as well as unsuccessful outcomes.\n\n    Success:\n     1. Scanner has scanner access\n     1. Scanner is checked into the project\n     1. Scannee is on the project for which you are scanning\n     1. The project the Scanner is scanning for matches the Scannee’s project\n\n    Failure: (test these to make sure they fail)\n     1. Scanner does not have scanner access\n     1. Scanner does have scanner access, but is not checked in to project\n     1. Scannee is not active\n     1. Project is not active\n     1. Scannee is not on this project (copy the details from a user not on the project)\n","parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"},{"name":"payload","in":"body","required":true,"schema":{"description":"POST to check in","required":["viewing_project_uniq_id","qr_provided_project_uniq_id","qr_provided_user_uniq_id","latitude","longitude"],"properties":{"viewing_project_uniq_id":{"type":"string","example":"09cf7c43-c6cc-40b8-8694-365eb4c58296"},"qr_provided_project_uniq_id":{"type":"string","example":"0f7797c43-c6cc-40b8-8694-365eb4c58296"},"qr_provided_user_uniq_id":{"type":"string","example":"bf8797c43-c6cc-40b8-8694-365eb4c58297"},"latitude":{"type":"string","example":"40.0234"},"longitude":{"type":"string","example":"-80.3343"}}}}],"responses":{"200":{"description":"**Check IN**\n","schema":{"type":"object","properties":{"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"checked-in"},"data":{"type":"object","properties":{"check_uniq_id":{"type":"string","example":"846ebe7a-594b-4085-9f29-7730c0f878c6"},"badge":{"description":"Information to build a badge","type":"object","properties":{"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"successfully retrieved badge"},"data":{"type":"object","properties":{"name":{"type":"string","example":"James Smith-Jones"},"badge_id":{"type":"number","example":"55"},"client_name":{"type":"string","example":"ABC Company"},"project_name":{"type":"string","example":"Project ABC Building"},"qr_location":{"type":"string","format":"url","example":"http://domain.com/api/ver/badge/{user_uniq_id}/{project_uniq_id}"},"avatar_location":{"type":"string","format":"url","example":"http://domain.com/api/ver/user/avatar/{uniq_id}"}}}}}}}}}},"401":{"description":"Not Authenticated","schema":{"description":"Not Authenticated Response's properties","properties":{"http_code":{"type":"integer","example":401},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authenticated"},"data":{"type":"array"}}}},"403":{"description":"Not Authorized","schema":{"description":"Not Authorized Response's properties","properties":{"http_code":{"type":"integer","example":403},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authorized"},"data":{"type":"array"}}}},"422":{"description":"**ALREADY Checked IN**\n","schema":{"type":"object","properties":{"http_code":{"type":"integer","example":422},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Checkin failed; already checked in"}}}}}},"put":{"tags":["mobile-app","user","checks"],"summary":"Check out from a project","description":"\n## Testing\n\nSee details under \"POST\" for /check/qr\n","parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"},{"name":"payload","in":"body","required":true,"schema":{"description":"PUT to check OUT","required":["viewing_project_uniq_id","qr_provided_project_uniq_id","qr_provided_user_uniq_id","latitude","longitude"],"properties":{"viewing_project_uniq_id":{"type":"string","example":"09cf7c43-c6cc-40b8-8694-365eb4c58296"},"qr_provided_project_uniq_id":{"type":"string","example":"0f7797c43-c6cc-40b8-8694-365eb4c58296"},"qr_provided_user_uniq_id":{"type":"string","example":"bf8797c43-c6cc-40b8-8694-365eb4c58296"},"latitude":{"type":"string","example":"40.0234"},"longitude":{"type":"string","example":"-80.3343"}}}}],"responses":{"200":{"description":"**Check OUT**\n\nTo check out you must already be checked in.\n","schema":{"type":"object","properties":{"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"checked-out"},"data":{"type":"object","properties":{"check_uniq_id":{"type":"string","example":"846ebe7a-594b-4085-9f29-7730c0f878c6"},"badge":{"description":"Information to build a badge","type":"object","properties":{"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"successfully retrieved badge"},"data":{"type":"object","properties":{"name":{"type":"string","example":"James Smith-Jones"},"badge_id":{"type":"number","example":"55"},"client_name":{"type":"string","example":"ABC Company"},"project_name":{"type":"string","example":"Project ABC Building"},"qr_location":{"type":"string","format":"url","example":"http://domain.com/api/ver/badge/{user_uniq_id}/{project_uniq_id}"},"avatar_location":{"type":"string","format":"url","example":"http://domain.com/api/ver/user/avatar/{uniq_id}"}}}}}}}}}},"401":{"description":"Not Authenticated","schema":{"description":"Not Authenticated Response's properties","properties":{"http_code":{"type":"integer","example":401},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authenticated"},"data":{"type":"array"}}}},"403":{"description":"Not Authorized","schema":{"description":"Not Authorized Response's properties","properties":{"http_code":{"type":"integer","example":403},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authorized"},"data":{"type":"array"}}}},"422":{"description":"**NOT Checked IN**\n","schema":{"type":"object","properties":{"http_code":{"type":"integer","example":422},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Checkout failed; not checked in"}}}}}}},"/user/badge/{user_uniq_id}/{project_uniq_id}":{"get":{"tags":["mobile-app","user"],"summary":"View Own Badge","description":"User views own badge","parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"},{"name":"user_uniq_id","in":"path","required":true,"type":"string","format":"uuid"},{"name":"project_uniq_id","in":"path","required":true,"type":"string","format":"uuid"}],"responses":{"200":{"description":"Build a badge information","schema":{"type":"object","properties":{"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"successfully retrieved badge"},"data":{"description":"Information to build a badge","type":"object","properties":{"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"successfully retrieved badge"},"data":{"type":"object","properties":{"name":{"type":"string","example":"James Smith-Jones"},"badge_id":{"type":"number","example":"55"},"client_name":{"type":"string","example":"ABC Company"},"project_name":{"type":"string","example":"Project ABC Building"},"qr_location":{"type":"string","format":"url","example":"http://domain.com/api/ver/badge/{user_uniq_id}/{project_uniq_id}"},"avatar_location":{"type":"string","format":"url","example":"http://domain.com/api/ver/user/avatar/{uniq_id}"}}}}}}}},"401":{"description":"Not Authenticated","schema":{"description":"Not Authenticated Response's properties","properties":{"http_code":{"type":"integer","example":401},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authenticated"},"data":{"type":"array"}}}}}}},"/user/qr/{user_uniq_id}/{project_uniq_id}":{"get":{"tags":["mobile-app","user","images"],"summary":"View QR code based on user/project","description":"Any authenticated use can see their own badges (their user_uniq_id will still need to be the first path parameter). Superuser and above can see any badges in their company.","produces":["image/png"],"parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"},{"name":"user_uniq_id","in":"path","description":"The uniq_id (UUID) of the user","required":true,"type":"string"},{"name":"project_uniq_id","in":"path","description":"The uniq_id (UUID) of the project","required":true,"type":"string"}],"responses":{"200":{"description":"The QR code, with user and project uniq_ids behind it (NO SCHEMA; image!)"},"401":{"description":"Not Authenticated","schema":{"description":"Not Authenticated Response's properties","properties":{"http_code":{"type":"integer","example":401},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authenticated"},"data":{"type":"array"}}}},"403":{"description":"Not Authorized","schema":{"description":"Not Authorized Response's properties","properties":{"http_code":{"type":"integer","example":403},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authorized"},"data":{"type":"array"}}}}}}},"/projects":{"get":{"tags":["mobile-app","projects"],"summary":"View Own Projects","description":"## Testing\n\nThis endpoint shows a list of projects the user is on, if any. For the test data-seeding, all active users should be tied\nto a project, though that might change in future seeding rounds.\n\nPlease pay close attention to the data structure and validate the order of results and verify this documentation is accurate.\n\nPlease note the /projects/{uniq_id} endpoint testing about being added/removed from projects to verify the same here.\n","parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"}],"responses":{"200":{"description":"Ok; receives a list of a projects the user is on","schema":{"type":"object","properties":{"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"Successfully retrieved 10 projects"},"data":{"type":"object","required":["name","startDate","endDate","latitude","longitude","radius"],"properties":{"name":{"type":"string","example":"Project Dach-Purdy","description":"The project name"},"uniq_id":{"type":"string","example":"5c61344b-70e5-3b37-94f4-3e5137d6b761","description":"The unique UUID for this project"},"description":{"type":"string","example":"A aut quia quo facere.","description":"The project description"},"startDate":{"type":"string","example":"2016-09-19 17:07:49","description":"The start date for this project"},"endDate":{"type":"string","example":"2016-10-19 09:00:25","description":"The end date for this project"},"latitude":{"type":"number","example":-88.261035,"description":"The latitude of the center-point fence"},"longitude":{"type":"number","example":-47.3623,"description":"The longitude of the center-point fence"},"radius":{"type":"integer","example":39,"description":"The radius of the point fence"},"distAway":{"type":"string","example":24,"description":"TODO - clarification; how to find this; will mobile apps send location data?"},"onSite":{"type":"string","example":9,"description":"How many users are actively onsite at this moment"},"asType":{"type":"string","example":"user","description":"Is the user seeing these results because they are in the projects pivot table as a user or superuser?"},"logo":{"type":"string","format":"url","example":"http://companya.example.org/api/v1.0/projects/b6b17a25-c449-3122-a448-e11bd1a82be7/logo","description":"URL of the client's logo"},"client":{"type":"object","description":"the client this project belongs to","properties":{"uniq_id":{"type":"string","format":"uuid","example":"b6b17a25-c449-3122-a448-e11bd1a82be7","description":"Unique UUID of the client that owns this project"},"name":{"type":"string","example":"Schamberger-Hirthe","description":"Client name that owns this project"},"logo":{"type":"string","format":"url","example":"http://api.example.org/api/v1.0/clients/logo/b6b17a25-c449-3122-a448-e11bd1a82be7","description":"URL of the client's logo"}}}}}}}},"401":{"description":"Not Authenticated","schema":{"description":"Not Authenticated Response's properties","properties":{"http_code":{"type":"integer","example":401},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authenticated"},"data":{"type":"array"}}}},"403":{"description":"Not Authorized","schema":{"description":"Not Authorized Response's properties","properties":{"http_code":{"type":"integer","example":403},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authorized"},"data":{"type":"array"}}}}}}},"/projects/{uniq_id}":{"get":{"tags":["mobile-app","projects"],"summary":"View one project user has access to view","description":"## Testing\n\nShow one project. This should be only a project the user is able to view, based on:\n  - User is 'added' to the project by a superuser or above.\n  - User is 'active'\n\nThis might be difficult to test right now, as you will need to log in as a `superuser`, add users to projects in\nthat endpoint, then log in as each user, and verify that they are on the project.  Then, log in as the `superuser`\nand remove them, then log in and verify they are no longer able to see the project.\n","parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"},{"name":"uniq_id","in":"path","required":true,"type":"string"}],"consumes":["application/json"],"produces":["application/json"],"responses":{"200":{"description":"OK","schema":{"description":"Successful call properties","properties":{"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"successfully retrieved 1 record"},"data":{"type":"string","example":"An object or an array, depending on results..."}}}},"401":{"description":"Not Authenticated","schema":{"description":"Not Authenticated Response's properties","properties":{"http_code":{"type":"integer","example":401},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authenticated"},"data":{"type":"array"}}}},"403":{"description":"Not Authorized","schema":{"description":"Not Authorized Response's properties","properties":{"http_code":{"type":"integer","example":403},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authorized"},"data":{"type":"array"}}}}}}},"/projects/{uniq_id}/logs":{"get":{"tags":["mobile-app","projects"],"summary":"Get all of the authenticated user's logs for {uniq_id} project","description":"## Testing\n\nPlease test that the fields are documented properly, that they show the fields that are actually returned.\n\nNote: Please test to see if you get a 404 response for a user's project that does not have any log entries. It should still be 200,\n    but show \"num_results\": 0 in that case.  Please open an issue if you ever get a 404 response.\n","parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"},{"name":"uniq_id","in":"path","required":true,"type":"string"},{"name":"page","in":"query","required":false,"type":"integer"}],"responses":{"200":{"description":"Successful retrieval of user's logs for this project; note: data is always an array, whether 1 or greater than 1 result","schema":{"type":"object","properties":{"total":{"type":"integer","example":38},"per_page":{"type":"integer","example":10},"current_page":{"type":"integer","example":2},"last_page":{"type":"integer","example":4},"next_page_url":{"type":"string","example":"http://companya.punchcardllc.com/api/v1.0/project/{uniq_id}/logs?page=3"},"prev_page_url":{"type":"string","example":"http://companya.punchcardllc.com/api/v1.0/project/{uniq_id}/logs?page=2"},"from":{"type":"integer","example":1},"to":{"type":"integer","example":10},"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"Successful"},"num_results":{"type":"integer","example":5},"data":{"type":"array","items":{"properties":{"note":{"type":"string","example":"This is a log note"},"uniq_id":{"type":"string","example":"846ebe7a-594b-4085-9f29-7730c0f878c6"},"type":{"type":"string","example":"punch-in exception"},"dateTime":{"type":"string","format":"date","example":"2016-10-24 21:50:15"},"project":{"type":"object","properties":{"uniq_id":{"type":"string","format":"uuid","example":"24de4935-f1ba-38b3-b44e-96fcd8e9ccab"},"name":{"type":"string","example":"Jacobs Inc"},"id":{"type":"integer","example":2}}}}}}}}},"401":{"description":"Not Authenticated","schema":{"description":"Not Authenticated Response's properties","properties":{"http_code":{"type":"integer","example":401},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authenticated"},"data":{"type":"array"}}}},"403":{"description":"Not Authorized","schema":{"description":"Not Authorized Response's properties","properties":{"http_code":{"type":"integer","example":403},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authorized"},"data":{"type":"array"}}}},"422":{"description":"Bad Input","schema":{"description":"Bad Input Response's properties. When safe to do so, `message` will include details of the bad input.","properties":{"http_code":{"type":"integer","example":422},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Bad Input details"}}}}}}},"/projects/{uniq_id}/employees":{"get":{"tags":["mobile-app","projects"],"summary":"View list of users on a project","description":"## Testing\n\nThis endpoint should only be availabe to a `superuser` or above. Please try it as a `user` for each round of regression to\nensure that a `user` cannot use this endpoint.\n\nThis endpoint should show a list of users that are on a specific project, and include whether they are punched in or not,\nand when the last time they punched in or out of this project was.\n","parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"},{"name":"uniq_id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Ok; superuser or better consumer receives list of the project's users - project defined by <uniq_id>","schema":{"type":"object","properties":{"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"Retrieved 10 records"},"data":{"type":"array","items":{"type":"object","required":["name","uniq_id"],"properties":{"id":{"type":"number","example":22},"name":{"type":"string","example":"Fred Smith"},"uniq_id":{"type":"string","example":"b6b17a25-c449-3122-a448-e11bd1a82be7"},"lastCheckIn":{"type":"string","example":"2016-09-24 23:22:20"},"lastCheckOut":{"type":"string","example":"2016-09-24 23:25:20"}}}}}}},"401":{"description":"Not Authenticated","schema":{"description":"Not Authenticated Response's properties","properties":{"http_code":{"type":"integer","example":401},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authenticated"},"data":{"type":"array"}}}},"403":{"description":"Not Authorized","schema":{"description":"Not Authorized Response's properties","properties":{"http_code":{"type":"integer","example":403},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authorized"},"data":{"type":"array"}}}}}}},"/projects/{uniq_id}/logo":{"get":{"tags":["mobile-app","projects","images"],"summary":"Any user can view a project logo by uniq_id.","description":"## Testing\n\n  This endpoint should be tested to be accessible by any user, logged in or not. The reason for this is the\n  relationship between the subdomains makes it difficult (perhaps impossible) to lock down a logo to a logo but not\n  have issues with parent and child companies viewing them.\n","produces":["image/png"],"parameters":[{"name":"uniq_id","in":"path","description":"The uniq_id (UUID) of the project","required":true,"type":"string"}],"responses":{"200":{"description":"The project's logo","schema":{"type":"file"}},"404":{"description":"Not Found","schema":{"description":"Not Found Response's properties","properties":{"http_code":{"type":"integer","example":404},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Found"},"data":{"type":"array"}}}}}}},"/webapp/projects":{"get":{"tags":["web-app","admin","projects"],"summary":"View ALL project as admin or superadmin. Admin sees ALL projects but Only in own company.","description":"## Testing\n\nShow ALL projects in client.  Since this is as an admin, this should be ALL the projects in the company.\nPlease compare to the /dev/clients/ system.\n","parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"}],"responses":{"200":{"description":"Ok; receives a list of a projects for the client/company","schema":{"type":"object","properties":{"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"Successfully retrieved 10 projects"},"data":{"type":"array","items":{"type":"object","required":["name","startDate","endDate","latitude","longitude","radius"],"properties":{"name":{"type":"string","example":"Project Dach-Purdy","description":"The project name"},"uniq_id":{"type":"string","example":"5c61344b-70e5-3b37-94f4-3e5137d6b761","description":"The unique UUID for this project"},"description":{"type":"string","example":"A aut quia quo facere.","description":"The project description"},"startDate":{"type":"string","example":"2016-09-19 17:07:49","description":"The start date for this project"},"endDate":{"type":"string","example":"2016-10-19 09:00:25","description":"The end date for this project"},"latitude":{"type":"number","example":-88.261035,"description":"The latitude of the center-point fence"},"longitude":{"type":"number","example":-47.3623,"description":"The longitude of the center-point fence"},"radius":{"type":"integer","example":39,"description":"The radius of the point fence"},"distAway":{"type":"string","example":24,"description":"TODO - clarification; how to find this; will mobile apps send location data?"},"onSite":{"type":"string","example":9,"description":"How many users are actively onsite at this moment"},"asType":{"type":"string","example":"user","description":"Is the user seeing these results because they are in the projects pivot table as a user or superuser?"},"logo":{"type":"string","format":"url","example":"http://companya.example.org/api/v1.0/projects/b6b17a25-c449-3122-a448-e11bd1a82be7/logo","description":"URL of the client's logo"},"client":{"type":"object","description":"the client this project belongs to","properties":{"uniq_id":{"type":"string","format":"uuid","example":"b6b17a25-c449-3122-a448-e11bd1a82be7","description":"Unique UUID of the client that owns this project"},"name":{"type":"string","example":"Schamberger-Hirthe","description":"Client name that owns this project"},"logo":{"type":"string","format":"url","example":"http://api.example.org/api/v1.0/clients/logo/b6b17a25-c449-3122-a448-e11bd1a82be7","description":"URL of the client's logo"}}}}}}}}},"401":{"description":"Not Authenticated","schema":{"description":"Not Authenticated Response's properties","properties":{"http_code":{"type":"integer","example":401},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authenticated"},"data":{"type":"array"}}}},"403":{"description":"Not Authorized","schema":{"description":"Not Authorized Response's properties","properties":{"http_code":{"type":"integer","example":403},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authorized"},"data":{"type":"array"}}}}}}},"/webapp/projects/{uniq_id}":{"get":{"tags":["web-app","admin","projects"],"summary":"View one project as admin or superadmin. Admin sees project only in own company.","description":"## Testing\n\nShow one project.  Since this is as an admin, this should be ALL the projects in the company.\nPlease compare to the /dev/clients/ system.\n","parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"},{"name":"uniq_id","in":"path","required":true,"type":"string"}],"consumes":["application/json"],"produces":["application/json"],"responses":{"200":{"description":"Ok; receives a list of a projects for the client/company","schema":{"type":"object","properties":{"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"Successfully retrieved 10 projects"},"data":{"type":"object","required":["name","startDate","endDate","latitude","longitude","radius"],"properties":{"name":{"type":"string","example":"Project Dach-Purdy","description":"The project name"},"uniq_id":{"type":"string","example":"5c61344b-70e5-3b37-94f4-3e5137d6b761","description":"The unique UUID for this project"},"description":{"type":"string","example":"A aut quia quo facere.","description":"The project description"},"startDate":{"type":"string","example":"2016-09-19 17:07:49","description":"The start date for this project"},"endDate":{"type":"string","example":"2016-10-19 09:00:25","description":"The end date for this project"},"latitude":{"type":"number","example":-88.261035,"description":"The latitude of the center-point fence"},"longitude":{"type":"number","example":-47.3623,"description":"The longitude of the center-point fence"},"radius":{"type":"integer","example":39,"description":"The radius of the point fence"},"distAway":{"type":"string","example":24,"description":"TODO - clarification; how to find this; will mobile apps send location data?"},"onSite":{"type":"string","example":9,"description":"How many users are actively onsite at this moment"},"asType":{"type":"string","example":"user","description":"Is the user seeing these results because they are in the projects pivot table as a user or superuser?"},"logo":{"type":"string","format":"url","example":"http://companya.example.org/api/v1.0/projects/b6b17a25-c449-3122-a448-e11bd1a82be7/logo","description":"URL of the client's logo"},"client":{"type":"object","description":"the client this project belongs to","properties":{"uniq_id":{"type":"string","format":"uuid","example":"b6b17a25-c449-3122-a448-e11bd1a82be7","description":"Unique UUID of the client that owns this project"},"name":{"type":"string","example":"Schamberger-Hirthe","description":"Client name that owns this project"},"logo":{"type":"string","format":"url","example":"http://api.example.org/api/v1.0/clients/logo/b6b17a25-c449-3122-a448-e11bd1a82be7","description":"URL of the client's logo"}}}}}}}},"401":{"description":"Not Authenticated","schema":{"description":"Not Authenticated Response's properties","properties":{"http_code":{"type":"integer","example":401},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authenticated"},"data":{"type":"array"}}}},"403":{"description":"Not Authorized","schema":{"description":"Not Authorized Response's properties","properties":{"http_code":{"type":"integer","example":403},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authorized"},"data":{"type":"array"}}}}}}},"/webapp/users/{uniq_id}":{"get":{"tags":["web-app","ihos-app","user"],"summary":"View one user via webapp.","description":"## Testing\n\nShow one user.  Since this is as an admin, this should be ALL the users in the company.\nPlease compare to the /dev/clients/ system.\n","parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"},{"name":"uniq_id","in":"path","required":true,"type":"string"}],"consumes":["application/json"],"produces":["application/json"],"responses":{"200":{"description":"Ok; receives a list of a projects for the client/company","schema":{"type":"object","properties":{"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"Successfully retrieved 1 user"},"data":{"type":"object","required":["uuid","name","email","mobileNumber","username"],"properties":{"name":{"type":"string","example":"Jane Doe","description":"User's full name"},"email":{"type":"string","example":"email@domain.com","description":"User's email; can also be a username"},"mobileNumber":{"type":"string","example":1234569999,"description":"User's mobile phone number; can also be a username"},"username":{"type":"string","example":"JaneDoe1988","description":"User's username"},"permissions":{"type":"array","items":{"type":"string","example":"{json}"}},"uniq_id":{"readOnly":true,"type":"string","example":"8b2fc998-ce46-38e7-b7de-04a29e8695af","description":"The assigned UUID for the user"},"role":{"readOnly":true,"type":"string","example":"admin (read only)","description":"The user's role; user, superuser, admin, superadmin"},"status":{"readOnly":true,"type":"string","example":"active (read only)","description":"The user's status - active or inactive"},"jdoc":{"type":"object","description":"the json document store","properties":{"department":{"type":"string","example":"Department Name"},"trade":{"type":"string","example":"Craftsman"},"job_title":{"type":"string","example":"Head Craftsman"},"homeNumber":{"type":"integer","example":3334445555,"description":"The user's home phone number"},"workNumber":{"type":"integer","example":3334446666,"description":"The user's work phone number"},"middleName":{"type":"string","example":"Franklin","description":"The user's middle name"},"address":{"type":"object","description":"User address","properties":{"address1":{"type":"string","example":"123 Avenue Way","description":"Line 1 of the user's address"},"address2":{"type":"string","example":"Suite 3","description":"Line 2 of the user's address"},"zip":{"type":"integer","example":75023,"description":"The user's main zip code"},"city":{"type":"string","example":"New Haven","description":"The user's city"},"state":{"type":"string","example":"MT","description":"State (2 letter)"}}},"vehicle":{"type":"object","description":"User Vehicle","properties":{"make":{"type":"string","example":"Ford","description":"The make of the user's car"},"model":{"type":"string","example":"F150","description":"The model of the user's car"},"licPlateNumber":{"type":"string","example":"333-8AGR","description":"The user's license plate number"},"licPlateState":{"type":"string","example":"ABG-312","description":"The user's license plate number"},"driversLicenseState":{"type":"string","example":"TX","description":"The user's drivers license state"},"driversLicenseNumber":{"type":"string","example":"XPRDTY88","description":"The user's drivers license number"}}},"emerContact":{"type":"object","description":"User's emergency contact","properties":{"firstName":{"type":"string","example":"JK","description":"The emergency contact's first name"},"lastName":{"type":"string","example":"Jones","description":"The emergency contact's last name"},"middleName":{"type":"string","example":"Pat","description":"The emergency contact's middle name"},"relation":{"type":"string","example":"Spouse","description":"The emergency contact's relationship to the user"},"email":{"type":"string","example":"example@email.com","description":"The emergency contact's email address"},"homeNumber":{"type":"string","example":9998887777,"description":"The emergency contact's home phone number"},"workNumber":{"type":"string","example":8887773333,"description":"The emergency contact's work phone number"},"mobileNumber":{"type":"string","example":3332223333,"description":"The emergency contact's mobile phone number"}}}}}}}}}},"401":{"description":"Not Authenticated","schema":{"description":"Not Authenticated Response's properties","properties":{"http_code":{"type":"integer","example":401},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authenticated"},"data":{"type":"array"}}}},"403":{"description":"Not Authorized","schema":{"description":"Not Authorized Response's properties","properties":{"http_code":{"type":"integer","example":403},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authorized"},"data":{"type":"array"}}}}}}},"/webapp/users/{uniq_id}/timesheets":{"get":{"tags":["web-app","ihos-app","user"],"summary":"View one user as admin or superadmin. Sees users only in own company.","description":"## Testing\n\nShow one user.  Since this is as an admin, this should be ALL the users in the company.\nPlease compare to the /dev/clients/ system.\n","parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"},{"name":"uniq_id","in":"path","required":true,"type":"string"}],"consumes":["application/json"],"produces":["application/json"],"responses":{"200":{"description":"Ok; receives a list of a projects for the client/company","schema":{"type":"object","properties":{"total":{"type":"integer","example":38},"per_page":{"type":"integer","example":10},"current_page":{"type":"integer","example":2},"last_page":{"type":"integer","example":4},"next_page_url":{"type":"string","example":"http://companya.punchcardllc.com/api/v1.0/user/logs?page=3"},"prev_page_url":{"type":"string","example":"http://companya.punchcardllc.com/api/v1.0/user/logs?page=2"},"from":{"type":"integer","example":1},"to":{"type":"integer","example":10},"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"Successful"},"num_results":{"type":"integer","example":5},"data":{"type":"object","required":["id","uniq_id"],"properties":{"id":{"type":"integer","example":137,"description":"ID"},"uniq_id":{"type":"string","example":"780fa190-df2a-3e8d-9d1c-001ace126f58"},"user_id":{"type":"integer","example":3},"project_id":{"type":"integer","example":4},"checkInDateTime":{"type":"string","example":"2016-11-03 03:53:10"},"checkOutDateTime":{"type":"string","example":"2016-11-02 22:48:29"},"longitudeIn":{"type":"integer","example":"27.379851"},"latitudeIn":{"type":"integer","example":"-25.479815"},"longitudeOut":{"type":"integer","example":"-60.636598"},"latitudeOut":{"type":"integer","example":"-24.467042"},"checkMethod":{"type":"string","example":"qr"}}}}}},"401":{"description":"Not Authenticated","schema":{"description":"Not Authenticated Response's properties","properties":{"http_code":{"type":"integer","example":401},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authenticated"},"data":{"type":"array"}}}},"403":{"description":"Not Authorized","schema":{"description":"Not Authorized Response's properties","properties":{"http_code":{"type":"integer","example":403},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authorized"},"data":{"type":"array"}}}}}}},"/webapp/clients/{uniq_id}":{"get":{"tags":["web-app","clients"],"summary":"Webapp access to clients","description":"## Testing\n\nThis endpoint shows the web app user a client, along with the projects, users, and children of the client\n","parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"},{"name":"uniq_id","in":"path","required":true,"type":"string"}],"consumes":["application/json"],"produces":["application/json"],"responses":{"200":{"description":"Results","schema":{"type":"object","properties":{"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"successfully retrieved 1 record"},"data":{"type":"object","properties":{"id":{"type":"integer","example":137,"description":"ID"},"uniq_id":{"type":"string","example":"780fa190-df2a-3e8d-9d1c-001ace126f58"},"child_of_id":{"type":"string","example":1},"subdomain":{"type":"string","example":"companyh"},"name":{"type":"string","example":"Baumbach Ltd"},"address1":{"type":"string","example":"154 Chaz Extension Apt. 330"},"address2":{"type":"string","example":"467 Zachery Highway Suite 951"},"city":{"type":"string","example":"Harbermouth"},"state":{"type":"string","example":"HI"},"zip":{"type":"string","example":65507},"country":{"type":"string","example":"US"},"county":{"type":"string","example":"Anniestad"},"status":{"type":"string","example":"active"},"jdoc":{"type":"string","example":"json data"},"logo":{"type":"string","example":"http://api.punchcardllc.com/api/v1.0/clients/logo/ce531a15-b42e-33df-85d7-38347d50ca7"}}}}}},"401":{"description":"Not Authenticated","schema":{"description":"Not Authenticated Response's properties","properties":{"http_code":{"type":"integer","example":401},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authenticated"},"data":{"type":"array"}}}},"403":{"description":"Not Authorized","schema":{"description":"Not Authorized Response's properties","properties":{"http_code":{"type":"integer","example":403},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authorized"},"data":{"type":"array"}}}}}}},"/webapp/clients/":{"post":{"tags":["web-app","clients"],"summary":"Insert a client, optionally as a child of an existing client","description":"\n## Testing\n","parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"},{"name":"payload","in":"body","required":true,"schema":{"description":"POST to create","required":["subdomain","name","address1","city","state","zip","status","uniq_id"],"properties":{"uniq_id":{"type":"string","description":"The UUID/uniq_id of the Project","example":"09cf7c43-c6cc-40b8-8694-365eb4c58296"},"subdomain":{"type":"string","example":"companyf"},"name":{"type":"string","example":"Lindgren-Stiedemann"},"fein":{"type":"string","example":9027668965},"address1":{"type":"string","example":"461 Stoltenberg Harbors"},"address2":{"type":"string","example":"379 Jacobson Creek"},"city":{"type":"string","example":"Alvenastad"},"state":{"type":"string","example":"ME"},"zip":{"type":"string","example":50873},"country":{"type":"string","example":"US"},"county":{"type":"string","example":"South"},"status":{"type":"string","example":"active"}}}}],"responses":{"200":{"description":"Client is created","schema":{"type":"object","properties":{"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"Updated client successfully"},"data":{"type":"object","properties":{"uniq_id":{"type":"string","example":"09cf7c43-c6cc-40b8-8694-365eb4c58296"},"subdomain":{"type":"string","example":"companyf"},"name":{"type":"string","example":"Lindgren-Stiedemann"},"fein":{"type":"string","example":9027668965},"address1":{"type":"string","example":"461 Stoltenberg Harbors"},"address2":{"type":"string","example":"379 Jacobson Creek"},"city":{"type":"string","example":"Alvenastad"},"state":{"type":"string","example":"ME"},"zip":{"type":"string","example":50873},"country":{"type":"string","example":"US"},"county":{"type":"string","example":"South"},"status":{"type":"string","example":"active"}}}}}},"401":{"description":"Not Authenticated","schema":{"description":"Not Authenticated Response's properties","properties":{"http_code":{"type":"integer","example":401},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authenticated"},"data":{"type":"array"}}}},"403":{"description":"Not Authorized","schema":{"description":"Not Authorized Response's properties","properties":{"http_code":{"type":"integer","example":403},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authorized"},"data":{"type":"array"}}}},"422":{"description":"Bad Input","schema":{"description":"Bad Input Response's properties. When safe to do so, `message` will include details of the bad input.","properties":{"http_code":{"type":"integer","example":422},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Bad Input details"}}}}}},"put":{"tags":["web-app","clients"],"summary":"Update a client","description":"\n## Testing\n","parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"},{"name":"payload","in":"body","required":true,"schema":{"description":"PUT to update","required":["subdomain","name","address1","city","state","zip","status","uniq_id"],"properties":{"uniq_id":{"type":"string","description":"The UUID/uniq_id of the Project","example":"09cf7c43-c6cc-40b8-8694-365eb4c58296"},"subdomain":{"type":"string","example":"companyf"},"name":{"type":"string","example":"Lindgren-Stiedemann"},"fein":{"type":"string","example":9027668965},"address1":{"type":"string","example":"461 Stoltenberg Harbors"},"address2":{"type":"string","example":"379 Jacobson Creek"},"city":{"type":"string","example":"Alvenastad"},"state":{"type":"string","example":"ME"},"zip":{"type":"string","example":50873},"country":{"type":"string","example":"US"},"county":{"type":"string","example":"South"},"status":{"type":"string","example":"active"}}}}],"responses":{"200":{"description":"Client is updated","schema":{"type":"object","properties":{"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"Updated client successfully"},"data":{"type":"object","properties":{"uniq_id":{"type":"string","example":"09cf7c43-c6cc-40b8-8694-365eb4c58296"},"subdomain":{"type":"string","example":"companyf"},"name":{"type":"string","example":"Lindgren-Stiedemann"},"fein":{"type":"string","example":9027668965},"address1":{"type":"string","example":"461 Stoltenberg Harbors"},"address2":{"type":"string","example":"379 Jacobson Creek"},"city":{"type":"string","example":"Alvenastad"},"state":{"type":"string","example":"ME"},"zip":{"type":"string","example":50873},"country":{"type":"string","example":"US"},"county":{"type":"string","example":"South"},"status":{"type":"string","example":"active"}}}}}},"401":{"description":"Not Authenticated","schema":{"description":"Not Authenticated Response's properties","properties":{"http_code":{"type":"integer","example":401},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authenticated"},"data":{"type":"array"}}}},"403":{"description":"Not Authorized","schema":{"description":"Not Authorized Response's properties","properties":{"http_code":{"type":"integer","example":403},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authorized"},"data":{"type":"array"}}}},"422":{"description":"Bad Input","schema":{"description":"Bad Input Response's properties. When safe to do so, `message` will include details of the bad input.","properties":{"http_code":{"type":"integer","example":422},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Bad Input details"}}}}}}},"/webapp/user/{uniq_id}":{"get":{"tags":["web-app","user"],"summary":"View Own Profile","description":"## Testing\n","parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"},{"name":"uniq_id","in":"path","required":true,"type":"string"}],"consumes":["application/json"],"produces":["application/json"],"responses":{"200":{"description":"Results of a webapp user retrieving own profile information","schema":{"type":"object","properties":{"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"successfully retrieved 1 record"},"data":{"type":"object","required":["uuid","name","email","mobileNumber","username"],"properties":{"name":{"type":"string","example":"Jane Doe","description":"User's full name"},"email":{"type":"string","example":"email@domain.com","description":"User's email; can also be a username"},"mobileNumber":{"type":"string","example":1234569999,"description":"User's mobile phone number; can also be a username"},"username":{"type":"string","example":"JaneDoe1988","description":"User's username"},"permissions":{"type":"array","items":{"type":"string","example":"{json}"}},"uniq_id":{"readOnly":true,"type":"string","example":"8b2fc998-ce46-38e7-b7de-04a29e8695af","description":"The assigned UUID for the user"},"role":{"readOnly":true,"type":"string","example":"admin (read only)","description":"The user's role; user, superuser, admin, superadmin"},"status":{"readOnly":true,"type":"string","example":"active (read only)","description":"The user's status - active or inactive"},"jdoc":{"type":"object","description":"the json document store","properties":{"department":{"type":"string","example":"Department Name"},"trade":{"type":"string","example":"Craftsman"},"job_title":{"type":"string","example":"Head Craftsman"},"homeNumber":{"type":"integer","example":3334445555,"description":"The user's home phone number"},"workNumber":{"type":"integer","example":3334446666,"description":"The user's work phone number"},"middleName":{"type":"string","example":"Franklin","description":"The user's middle name"},"address":{"type":"object","description":"User address","properties":{"address1":{"type":"string","example":"123 Avenue Way","description":"Line 1 of the user's address"},"address2":{"type":"string","example":"Suite 3","description":"Line 2 of the user's address"},"zip":{"type":"integer","example":75023,"description":"The user's main zip code"},"city":{"type":"string","example":"New Haven","description":"The user's city"},"state":{"type":"string","example":"MT","description":"State (2 letter)"}}},"vehicle":{"type":"object","description":"User Vehicle","properties":{"make":{"type":"string","example":"Ford","description":"The make of the user's car"},"model":{"type":"string","example":"F150","description":"The model of the user's car"},"licPlateNumber":{"type":"string","example":"333-8AGR","description":"The user's license plate number"},"licPlateState":{"type":"string","example":"ABG-312","description":"The user's license plate number"},"driversLicenseState":{"type":"string","example":"TX","description":"The user's drivers license state"},"driversLicenseNumber":{"type":"string","example":"XPRDTY88","description":"The user's drivers license number"}}},"emerContact":{"type":"object","description":"User's emergency contact","properties":{"firstName":{"type":"string","example":"JK","description":"The emergency contact's first name"},"lastName":{"type":"string","example":"Jones","description":"The emergency contact's last name"},"middleName":{"type":"string","example":"Pat","description":"The emergency contact's middle name"},"relation":{"type":"string","example":"Spouse","description":"The emergency contact's relationship to the user"},"email":{"type":"string","example":"example@email.com","description":"The emergency contact's email address"},"homeNumber":{"type":"string","example":9998887777,"description":"The emergency contact's home phone number"},"workNumber":{"type":"string","example":8887773333,"description":"The emergency contact's work phone number"},"mobileNumber":{"type":"string","example":3332223333,"description":"The emergency contact's mobile phone number"}}}}}}}}}},"401":{"description":"Not Authenticated","schema":{"description":"Not Authenticated Response's properties","properties":{"http_code":{"type":"integer","example":401},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authenticated"},"data":{"type":"array"}}}},"403":{"description":"Not Authorized","schema":{"description":"Not Authorized Response's properties","properties":{"http_code":{"type":"integer","example":403},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authorized"},"data":{"type":"array"}}}}}}},"/clients/logo":{"get":{"tags":["mobile-app","clients","images"],"summary":"View Own Logo","description":"## Testing\n\nPlease test this endpoint with several users from several different clients.\n","produces":["image/png"],"parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"}],"responses":{"200":{"description":"Results of a user viewing own client logo","schema":{"type":"file"}},"401":{"description":"Not Authenticated","schema":{"description":"Not Authenticated Response's properties","properties":{"http_code":{"type":"integer","example":401},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authenticated"},"data":{"type":"array"}}}},"403":{"description":"Not Authorized","schema":{"description":"Not Authorized Response's properties","properties":{"http_code":{"type":"integer","example":403},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authorized"},"data":{"type":"array"}}}},"404":{"description":"Not Found","schema":{"description":"Not Found Response's properties","properties":{"http_code":{"type":"integer","example":404},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Found"},"data":{"type":"array"}}}}}}},"/clients/logo/{uniq_id}":{"get":{"tags":["mobile-app","clients","images"],"summary":"Any logged in user can view logo by uniq_id","description":"## Testing\n\nPlease test this endpoint with several users, using different `uniq_id`.  Please find 5-7 different `uniq_id`\nfrom clients and try them, using a variety of user roles and status. For example, a test story might cover:\n\n  1. User who has 'status' = 'active' and 'role' = 'user' views avatar from user who is 'status' = 'active' and 'role' = 'user'\n  1. User who has 'status' = 'active' and 'role' = 'superuser' views avatar from user who is 'status' = 'active' and 'role' = 'user'\n  1. ... etc\n","produces":["image/png"],"parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"},{"name":"uniq_id","in":"path","description":"The uniq_id (UUID) of the client","required":true,"type":"string"}],"responses":{"200":{"description":"The client's logo","schema":{"type":"file"}},"404":{"description":"Not Found","schema":{"description":"Not Found Response's properties","properties":{"http_code":{"type":"integer","example":404},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Found"},"data":{"type":"array"}}}}}}},"/employee/{uniq_id}":{"get":{"tags":["mobile-app","superuser"],"summary":"View Employee Profile (as Superuser or above)","description":"## Testing\n\nThis endpoint shows a superuser or above an employee in their company's profile.\n\n- must be superuser or better\n- user they are viewing must be in their own company\n- not updateable (just a GET)\n\nPlease make sure all of the fields listed below exist in the result.\n","parameters":[{"name":"Authorization","in":"header","required":true,"type":"string"},{"name":"uniq_id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Results of viewing an employee profile","schema":{"type":"object","properties":{"http_code":{"type":"integer","example":200},"result":{"type":"string","example":"success"},"message":{"type":"string","example":"successfully retrieved 1 record"},"data":{"type":"object","required":["uuid","name","email","mobileNumber","username"],"properties":{"name":{"type":"string","example":"Jane Doe","description":"User's full name"},"email":{"type":"string","example":"email@domain.com","description":"User's email; can also be a username"},"mobileNumber":{"type":"string","example":1234569999,"description":"User's mobile phone number; can also be a username"},"username":{"type":"string","example":"JaneDoe1988","description":"User's username"},"permissions":{"type":"array","items":{"type":"string","example":"{json}"}},"uniq_id":{"readOnly":true,"type":"string","example":"8b2fc998-ce46-38e7-b7de-04a29e8695af","description":"The assigned UUID for the user"},"role":{"readOnly":true,"type":"string","example":"admin (read only)","description":"The user's role; user, superuser, admin, superadmin"},"status":{"readOnly":true,"type":"string","example":"active (read only)","description":"The user's status - active or inactive"},"jdoc":{"type":"object","description":"the json document store","properties":{"department":{"type":"string","example":"Department Name"},"trade":{"type":"string","example":"Craftsman"},"job_title":{"type":"string","example":"Head Craftsman"},"homeNumber":{"type":"integer","example":3334445555,"description":"The user's home phone number"},"workNumber":{"type":"integer","example":3334446666,"description":"The user's work phone number"},"middleName":{"type":"string","example":"Franklin","description":"The user's middle name"},"address":{"type":"object","description":"User address","properties":{"address1":{"type":"string","example":"123 Avenue Way","description":"Line 1 of the user's address"},"address2":{"type":"string","example":"Suite 3","description":"Line 2 of the user's address"},"zip":{"type":"integer","example":75023,"description":"The user's main zip code"},"city":{"type":"string","example":"New Haven","description":"The user's city"},"state":{"type":"string","example":"MT","description":"State (2 letter)"}}},"vehicle":{"type":"object","description":"User Vehicle","properties":{"make":{"type":"string","example":"Ford","description":"The make of the user's car"},"model":{"type":"string","example":"F150","description":"The model of the user's car"},"licPlateNumber":{"type":"string","example":"333-8AGR","description":"The user's license plate number"},"licPlateState":{"type":"string","example":"ABG-312","description":"The user's license plate number"},"driversLicenseState":{"type":"string","example":"TX","description":"The user's drivers license state"},"driversLicenseNumber":{"type":"string","example":"XPRDTY88","description":"The user's drivers license number"}}},"emerContact":{"type":"object","description":"User's emergency contact","properties":{"firstName":{"type":"string","example":"JK","description":"The emergency contact's first name"},"lastName":{"type":"string","example":"Jones","description":"The emergency contact's last name"},"middleName":{"type":"string","example":"Pat","description":"The emergency contact's middle name"},"relation":{"type":"string","example":"Spouse","description":"The emergency contact's relationship to the user"},"email":{"type":"string","example":"example@email.com","description":"The emergency contact's email address"},"homeNumber":{"type":"string","example":9998887777,"description":"The emergency contact's home phone number"},"workNumber":{"type":"string","example":8887773333,"description":"The emergency contact's work phone number"},"mobileNumber":{"type":"string","example":3332223333,"description":"The emergency contact's mobile phone number"}}}}}}}}}},"401":{"description":"Not Authenticated","schema":{"description":"Not Authenticated Response's properties","properties":{"http_code":{"type":"integer","example":401},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authenticated"},"data":{"type":"array"}}}},"403":{"description":"Not Authorized","schema":{"description":"Not Authorized Response's properties","properties":{"http_code":{"type":"integer","example":403},"result":{"type":"string","example":"error"},"message":{"type":"string","example":"Not Authorized"},"data":{"type":"array"}}}}}}}},"tags":[{"name":"mobile-app","description":"End points for mobile"},{"name":"web-app","description":"End points for web-app"},{"name":"clients","description":"Client end points for the web app"},{"name":"projects","description":"Project end points: some active"},{"name":"user","description":"User end points"}]}