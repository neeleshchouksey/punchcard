post:
  tags:
    - mobile-app
    - user
    - checks
  summary: Check in to a project via a QR code
  description: |

    ## Testing

    This endpoint creates a check-in via a manually typed-in number.

    Scenario:
      Company has a person standing at the gate, checking people in.

      Person walks up with a printed and laminated badge, person at the gate sees the QR Code, scans it with his phone. Done. Same in reverse for PUT/check out (see below).

    Things to test:
      Person who is standing at the gate, it is this person who is actually logged in and using the app.
       - must be logged in
       - must be active
       - must have permissions via 'users->permissions->scanner' in the profile information. If the 'scanner' permission exists AND has the project_id (not uniq_id!), then this user is permitted to scan others in to the project.
         **Please check the TEST HELPERS link above to determine who has this permission; You can Toggle Scanner Access there.**

    Person who is walking through the gate, and being checked in:
     - must be on the project
     - must be active
     - must not already be checked in

    Possible BDD Test cases (please come up with more):
      - "As a superuser using the API directly, I need to check people in by scanning their badge QR code"
      - "As a superuser using the API directly, I need to check people in by scanning their badge QR code, and find that people with what appears to be a valid badge **but are no longer on the project** cannot check in"
      - "As a user using the API directly, and without 'scanner access', I should see an error message if I try to check someone by scanning their QR code"
      - "As a **superuser** using the API directly, and without 'scanner access', I should see an error message if I try to check someone by scanning their QR code"

    How to test:
     Take the test case "As a superuser, I need to check people in but make sure that people with what appears to be a valid bad but are no longer on the project cannot check in"

    Go to the /dev/users page.
    Select a company.
    Find a superuser in that company with "scanner access: yes". This is GateUser
        This will be your "logged in user" - the guy at the gate with a smart phone, "scanner access" and a line of people to check in or out.
    Use this GateUser user/pass in the Basic Auth
    Pick another user, this will be RegularUser
    Note which projects they are on
    On the client's page, find a project this RegularUser is **not** on (per the test)
    Try "checking in/out" as this user, using the /check/qr endpoint and note the message. (In this example, that would be an error notice that the RegularUser is not on the project).
    Test this with other people in the company, too.

    The 'uniq_id' is passed along. This is the uniq_id of the project the guy at the gate checking people is logged in to.

    We use this to confirm that this project AND the project on the badge are the same, so someone doesn't walk up with a badge for another project, but still get checked in.

    We have a new requirement that will really affect your work for the /check/badge and /check/qr endpoints.

    To test it, you need to pick out someone as a scanner, make sure they have Scanner Access. Pick out a project, then check this person into that project. The new requirement is the person scanning (aka Scanner), is checked into the project he is scanning others into.

    Please check all the end points, including /user/check, to make sure they work. Please also test the /check/badge and /check/qr end points for successful, as well as unsuccessful outcomes.

        Success:
         1. Scanner has scanner access
         1. Scanner is checked into the project
         1. Scannee is on the project for which you are scanning
         1. The project the Scanner is scanning for matches the Scanneeâ€™s project

        Failure: (test these to make sure they fail)
         1. Scanner does not have scanner access
         1. Scanner does have scanner access, but is not checked in to project
         1. Scannee is not active
         1. Project is not active
         1. Scannee is not on this project (copy the details from a user not on the project)

  parameters:
    - name: Authorization
      in: header
      required: true
      type: string
    - name: payload
      in: body
      required: true
      schema:
        description: POST to check in
        required:
        - viewing_project_uniq_id
        - qr_provided_project_uniq_id
        - qr_provided_user_uniq_id
        - latitude
        - longitude
        properties:
          viewing_project_uniq_id:
            type: string
            example: "09cf7c43-c6cc-40b8-8694-365eb4c58296"
          qr_provided_project_uniq_id:
            type: string
            example: "0f7797c43-c6cc-40b8-8694-365eb4c58296"
          qr_provided_user_uniq_id:
            type: string
            example: "bf8797c43-c6cc-40b8-8694-365eb4c58297"
          latitude:
            type: string
            example: "40.0234"
          longitude:
            type: string
            example: "-80.3343"
  responses:
    200:
      description: |
        **Check IN**
      schema:
        type: object
        properties:
          http_code:
            type: integer
            example: 200
          result:
            type: string
            example: success
          message:
            type: string
            example: checked-in
          data:
            type: object
            properties:
              check_uniq_id:
                type: string
                example: "846ebe7a-594b-4085-9f29-7730c0f878c6"
              badge:
                $ref: "../../definitions/user/Badge.yaml#/Badge"
    422:
      description: |
        **ALREADY Checked IN**
      schema:
        type: object
        properties:
          http_code:
            type: integer
            example: 422
          result:
            type: string
            example: error
          message:
            type: string
            example: Checkin failed; already checked in
    401:
      $ref: "../../responses.yaml#/responses/NotAuthenticatedResponse"
    403:
      $ref: "../../responses.yaml#/responses/NotAuthorizedResponse"
put:
  tags:
    - mobile-app
    - user
    - checks
  summary: Check out from a project
  description: |

    ## Testing

    See details under "POST" for /check/qr

  parameters:
    - name: Authorization
      in: header
      required: true
      type: string
    - name: payload
      in: body
      required: true
      schema:
        description: PUT to check OUT
        required:
        - viewing_project_uniq_id
        - qr_provided_project_uniq_id
        - qr_provided_user_uniq_id
        - latitude
        - longitude
        properties:
          viewing_project_uniq_id:
            type: string
            example: "09cf7c43-c6cc-40b8-8694-365eb4c58296"
          qr_provided_project_uniq_id:
            type: string
            example: "0f7797c43-c6cc-40b8-8694-365eb4c58296"
          qr_provided_user_uniq_id:
            type: string
            example: "bf8797c43-c6cc-40b8-8694-365eb4c58296"
          latitude:
            type: string
            example: "40.0234"
          longitude:
            type: string
            example: "-80.3343"
  responses:
    200:
      description: |
        **Check OUT**

        To check out you must already be checked in.
      schema:
        type: object
        properties:
          http_code:
            type: integer
            example: 200
          result:
            type: string
            example: success
          message:
            type: string
            example: checked-out
          data:
            type: object
            properties:
              check_uniq_id:
                type: string
                example: "846ebe7a-594b-4085-9f29-7730c0f878c6"
              badge:
                $ref: "../../definitions/user/Badge.yaml#/Badge"
    422:
      description: |
        **NOT Checked IN**
      schema:
        type: object
        properties:
          http_code:
            type: integer
            example: 422
          result:
            type: string
            example: error
          message:
            type: string
            example: Checkout failed; not checked in
    401:
      $ref: "../../responses.yaml#/responses/NotAuthenticatedResponse"
    403:
      $ref: "../../responses.yaml#/responses/NotAuthorizedResponse"
